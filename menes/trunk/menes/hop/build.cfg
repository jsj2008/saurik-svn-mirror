cfg:set 'aggregate pass by reference' "$(c++:compile "
    struct Type {
        Type() {
        }

        Type(const Type &) {
        }
    };

    Type *f(Type arg) {
        return &arg;
    }

    int main() {
        Type value;
        return reinterpret_cast<Type *(*)(Type *)> (&f)(&value) == &value ? $yes : $no;
    }
")"

cfg:set 'upward argument abi' "$(c++:compile "
    bool f(int first, int second) {
        return &first < &second;
    }

    int main() {
        return f(0, 0) ? $yes : $no;
    }
")"
